version: "3.8"

volumes:
    mysql-data: {}
    postgres-data: {}

services:

  db:
    container_name: mysql_db
    image: mysql:8.0.25
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mycustom.cnf:/etc/mysql/conf.d/custom.cnf
    environment:
      MYSQL_DATABASE: product_search_db
      MYSQL_ROOT_PASSWORD: fake_pass
      MYSQL_TCP_PORT: 3306
    ports:
      - "3306:3306"
    expose:
      - 3306
    
  # db:
  #   container_name: postgresDB
  #   image: postgres:14.0
  #   restart: always
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: postgres
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #       - "5432:5432"

  redis:
    container_name: product_search_redis
    image: redis:7.0.11
    command: redis-server
    # ports:
    #   - "6379:6379"

  celeryworker:
    container_name: product_search_celery
    image: product_search_celery
    restart: always
    build:
      context: .
      dockerfile: docker/celery/Dockerfile
    volumes:
      - ./src:/app
    depends_on:
      - redis

  demo_api:
    container_name: product_search_api
    image: product_search_api
    restart: always
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    # command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./src:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - celeryworker
      - mailhog

  demo_api_easy_testing:
    container_name: testing
    image: testing
    restart: always
    build:
      context: .
      dockerfile: ./docker/testing/Dockerfile
    volumes:
      - ./src:/project/src
      - ./tests:/project/tests
    depends_on:
      - db
      - celeryworker
      - mailhog

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # smtp server
      - "8025:8025" # web ui
